
0. 当天所讲代码实现一遍

1. 理解this指针及其用法
    this指针式保证默认构造函数，默认拷贝构造函数，默认析构函数，以及每一个类的对象都能拥有独立的数据成员的关键。同时也由于静态成员函数没有this指针，所以该型的成员函数在整个类中只有一份且只能访问其他静态成员函数和静态数据成员。

2. 理解static数据成员、static成员函数和const成员函数的用法
    整个类只有一个静态数据成员和成员函数，静态数据成员必须在类外部初始化，同时静态成员函数只能调用静态数据成员和其他静态成员函数。在函数声明或数据成员声明之前用static修饰即可。
    const成员函数表示在调用过程中不能对参数或其他数据成员进行修改，同时也只能调用其它const数据成员和const成员函数。在定义普通成员函数的参数列表右括号后，函数体左花括号之间用const关键字修饰即可。

3. 理解复制构造函数、赋值运算符重载函数
    拷贝构造函数和重载赋值运算符最大的区别就是在使用场景（或调用时机）上的不同；
    拷贝构造函数主要在三处调用：
    a. 使用一个已有对象初始化一个新对象,即 Class a = b;
    b. 函数形参和实参结合的时候，即将实参传入函数（以一个对象作为形参）的时候
    c. 在函数返回一个对象的时候，即return语句处会调用

    赋值运算符是在赋值的时候发生的（非初始化），即a = b; (对象a已初始化)

4. 实现一个String类，保证main函数对正确执行

class String
{
public:
	String();
	String(const char *pstr);
	String(const String & rhs);
	String & operator=(const String & rhs);
	~String();

	void print();

private:
	char *_pstr;
};

int main(void)
{
	String str1;
	str1.print();
	
	String str2 = "Hello,world";
	String str3 = "wangdao";
	
	str2.print();		
	str3.print();
	str2 = str3;
	str2.print();	
	
	String str4 = str3;
	str4.print();
	return 0;
}

5. 预习后面的内容
